# This is a basic workflow to help you get started with Actions

name: Node.js CI Pipeline

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options: 
        - monalisa
        - cschleiden  
  push:
    branches: [ "main" , "dev" , "software/dev" , "releases/**"]
  pull_request: 
    branches: [ "main" , "dev" , "software/dev"]
  schedule:
    - cron: '21 14 * * 0'

jobs:
  #CI Build
  build: 
    if: ${{ always() }}
    runs-on: unbuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Print hello
        run: echo "Hi"
      #checkout      
      - name: Checkout Repo
        uses: actions/checkout@v3
      #Dependency managment
      - name: Install Dependencies
        run: npm ci
      #Run internal build
      - name: Build Package
        run: npm run build --if-present      
      #test
      - name: Run Unit Tests
        run: npm test
  
  #Lint
  Lint:
    if: ${{ github.event_name != 'schedule' }}
    runs-on: unbuntu-latest
    steps:
      - name: Print hello
        run: echo "Hi"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #Scan
  Scan:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request'}}
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  
  #PR extra-> validate documentation added, increment version, add info based on files
  PR_Tasks:
    if: github.event_name == 'pull_request'
    runs-on: unbuntu-latest
    steps:
      - name: Print 3
        run: echo "3"
  #integration testing pipeline
  Integration_Tests:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: unbuntu-latest
    steps:
      - name: Print 3
        run: echo "3"
    
